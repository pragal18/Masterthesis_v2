<http://dbpedia.org/resource/Active_Server_Pages?dbpv=2016-10&nif=context> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Context> .
<http://dbpedia.org/resource/Active_Server_Pages?dbpv=2016-10&nif=context> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#beginIndex> "0"^^<http://www.w3.org/2001/XMLSchema#nonNegativeInteger> .
<http://dbpedia.org/resource/Active_Server_Pages?dbpv=2016-10&nif=context> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#endIndex> "5414"^^<http://www.w3.org/2001/XMLSchema#nonNegativeInteger> .
<http://dbpedia.org/resource/Active_Server_Pages?dbpv=2016-10&nif=context> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#sourceUrl> <http://en.wikipedia.org/wiki/Active_Server_Pages?oldid=740480502> .
<http://dbpedia.org/resource/Active_Server_Pages?dbpv=2016-10&nif=context> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#isString> "Active Server Pages (ASP), later known as Classic ASP or ASP Classic, is Microsoft's first server-side script engine for dynamically generated web pages. ASP.NET, first released in January 2002, has superseded ASP.\n\nHistory\nInitially released as an add-on to Internet Information Services (IIS) via the Windows NT 4.0 Option Pack (ca. 1996), it is included as a free component of Windows Server (since the initial release of Windows 2000 Server). There have been three versions of ASP, each introduced with different versions of IIS: \n*  ASP 1.0 was released on December 1996 as part of IIS 3.0 \n*  ASP 2.0 was released on September 1997 as part of IIS 4.0 \n*  ASP 3.0 was released on November 2000 as part of IIS 5.0 ASP 2.0 provides six built-in objects: Application, ASPError, Request, Response, Server, and Session. Session object, for example, represents a session that maintains the state of variables from page to page. The Active Scripting engine's support of the Component Object Model (COM) enables ASP websites to access functionality in compiled libraries such as DLLs. ASP 3.0 does not differ greatly from ASP 2.0 but it does offer some additional enhancements such as Server.Transfer method, Server.Execute method, and an enhanced ASPError object. ASP 3.0 also enables buffering by default and optimized the engine for better performance. ASP remains supported until 14 January 2020 on Windows 7. The use of ASP pages will be supported on Windows 8 for a minimum of 10 years from the Windows 8 release date.\n\nArchitecture\nASP use server-side scripting to generate contents that would be sent to the visitor's web browser. The ASP interpreter reads and executes all script code between <% and %> tags, the result of which is content generation. These scripts are written using VBScript, JScript and PerlScript. The @Language directive, the <script language=\"manu\" runat=\"server\" /> syntax or server configuration can be used to select the language. In the example below, Response.Write Now() is in an HTML page; it would be dynamically replaced by the current time of the server. Web pages with the .asp filename extension use ASP, although some web sites disguise their choice of scripting language for security purposes by using the more common .htm or .html extensions. Pages with the .aspx extension use compiled ASP.NET; however, ASP.NET pages may still include some ASP scripting. The introduction of ASP.NET led to use of the term Classic ASP for the original technology. ASP runs only on Windows. A number of products emulate some of the functionality of Classic ASP on non-Microsoft web servers. Apache::ASP for example ports Classic ASP to the Apache Web Server, but can only interpret PerlScript. Sun Java System ASP (formerly ChiliSoft ASP) was a popular and reportedly complete emulator, but it has been discontinued.\n\nThe Request object\nAllows data to be read that was sent by the client browser: Form, Querystring, and HTTP Cookie. It also provides information on the server, the client browser, and retrieve HTTP Cookie stored on the visitor's machine. Can retrieve data from a form using both methods HTTP: Request.Form reads data sent by POST. Request.QueryString reads data sent by GET. <%Response.Write \"Welcome \" & Server.HTMLEncode(Request.QueryString(\"name\")) & \"!\"%>\n\nThe Response object\nCan send information to the client, such as the writing of the text on a page or HTTP Cookie. <%If Len(Request.QueryString(\"name\")) > 0 Then     Response.Cookies(\"name\") = Request.QueryString(\"name\") End IfResponse.Write \"Welcome \" & Server.HTMLEncode(Response.Cookies(\"name\")) & \"!\"%>\n\nThe Server object\nAllows connections to databases (ADO), filesystem, and use of components installed on the server. <%Dim oAdoCon, oAdoRec, oAdoStm, oCdoCon, oCdoMsg, oSciDic, oSciFsm, oMswAdrSet oAdoCon = Server.CreateObject(\"ADODB.Connection\")Set oAdoRec = Server.CreateObject(\"ADODB.Recordset\")Set oAdoStm = Server.CreateObject(\"ADODB.Stream\")Set oCdoCon = Server.CreateObject(\"CDO.Configuration\")Set oCdoMsg = Server.CreateObject(\"CDO.Message\")Set oSciDic = Server.CreateObject(\"Scripting.Dictionary\")Set oSciFsm = Server.CreateObject(\"Scripting.FileSystemObject\")Set oMswAdr = Server.CreateObject(\"MSWC.AdRotator\")%>\n\nThe Application object\nStores global variables. <%Application(\"Ali\") = \"My ASP Application\"Response.Write \"Welcome to \" & Server.HTMLEncode(Application(\"Ali\")) & \"!\"%>\n\nThe Session object\nStores variables accessible only to a single visitor. <%If Len(Request.QueryString(\"name\")) > 0 Then     Session(\"name\") = Request.QueryString(\"name\") End IfResponse.Write \"Welcome \" & Server.HTMLEncode(Session(\"name\")) & \"!\"%>\n\nThe Err object\nAllows for the management of errors. <%On Error Resume NextResponse.Write 1 / 0 ' Division by zeroIf Err.Number <> 0 Then     Response.Write \"Error Code: \" & Server.HTMLEncode(Err.Number) & \"<br />\"     Response.Write \"Error Source: \" & Server.HTMLEncode(Err.Source) & \"<br />\"     Response.Write \"Error Description: \" & Server.HTMLEncode(Err.Description) & \"<br />\"     Err.Clear End If %>\n\nSee also\n\n*  Template processor \n*  PHP \n*  Common Gateway Interface\n\nReferences\n\n\nExternal links\n\n*  ASP on MSDN \n*  Microsoft Support for ASP on Windows \n*  Classic ASP Applications on IIS 7.0 and IIS 7.5 Overview \n*  W3Schools ASP Programming Tutorial \n*  4GuysFromRolla.com ASP Programming FAQs \n*  Primitive Classic ASP Framework (XML, JSON, BENCODE)" .
<http://dbpedia.org/resource/Active_Server_Pages?dbpv=2016-10&nif=context> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#predLang> <http://lexvo.org/id/iso639-3/eng> .
